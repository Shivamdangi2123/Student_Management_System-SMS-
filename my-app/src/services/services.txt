 <div className="bgSetSideBar">
        <div>
          {/* Navbar */}
          {userRole == 'deliveryBoy' && (
            <nav className=" bg-white px-4 py-3 shadow-md flex justify-between items-center">
              <button
                className="md:hidden text-2xl"
                onClick={() => setSidebarOpen(true)}
              >
                <span className="text-2xl">☰</span>
              </button>

              <div className="hidden md:flex space-x-6 items-center">
                <NavLink
                  to="/dashboard"
                  className="text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                >
                  <span className="pi pi-fw pi-home  d-inline-block"></span>
                  <span className="text-black">Dashboard</span>
                </NavLink>

                {/* Products Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    disabled
                    style={{ borderRadius: '16px' }}
                    onClick={e => handleCheckClick(e, 'products')}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2"
                  >
                    <span className="pi pi-fw pi-list  d-inline-block"></span>
                    <span className="text-black">Products</span>
                  </button>
                </div>

                {/* Customer's Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    disabled
                    style={{ borderRadius: '16px' }}
                    onClick={e => handleCheckClick(e, 'display')}
                    className="text-decoration-none disabled:opacity-70 disabled:text-gray-200 text-black hover:bg-gray-300 p-2"
                  >
                    <span className="pi pi-fw pi-users d-inline-block"></span>
                    <span className="text-black">Customer's</span>
                  </button>
                </div>

                {/* ₹ Sales Dropdown */}
                {/* ₹ Sales Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[2] = el)}
                >
                  <button
                    onClick={() => toggleDropdown(2)}
                    className="text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                    style={{ borderRadius: '16px' }}
                  >
                    <span>₹ Sales ▼</span>
                  </button>
                  {dropdownOpen === 2 && (
                    <div className="absolute left-0 mt-2 w-52 bg-white border rounded shadow-lg z-50">
                      <button
                        disabled
                        onClick={e => handleCheckClick(e, 'invoices')}
                        className="disabled:opacity-70 disabled:text-gray-200 block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-file d-inline-block"></span>
                        <span>Invoice's</span>
                      </button>
                      <button
                        onClick={e =>
                          handleCheckClick(e, 'deliverychallan-table')
                        }
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-truck d-inline-block"></span>
                        <span>Delivery Challan</span>
                      </button>
                      <button
                        disabled
                        onClick={e => handleCheckClick(e, 'quotation')}
                        className="disabled:opacity-70 disabled:text-gray-200 block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-file d-inline-block"></span>
                        <span>Quotation's</span>
                      </button>
                      <button
                        disabled
                        onClick={e => handleCheckClick(e, 'paymentIn')}
                        className="disabled:opacity-70 disabled:text-gray-200 block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-money-bill d-inline-block"></span>
                        <span>Payment In list</span>
                      </button>
                    </div>
                  )}
                </div>

                {/* Purchase Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[3] = el)}
                >
                  <button
                    disabled
                    onClick={() => toggleDropdown(3)}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                    style={{ borderRadius: '16px' }}
                  >
                    <span>Purchase ▼</span>
                  </button>
                  {dropdownOpen === 3 && (
                    <div className="absolute left-0 mt-2 w-52 bg-white border rounded shadow-lg z-50">
                      <button
                        onClick={e => handleCheckClick(e, 'purchase-table')}
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-file d-inline-block"></span>
                        <span>Purchase List</span>
                      </button>
                      <button
                        onClick={e => handleCheckClick(e, 'purchaseForm')}
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-arrow-left d-inline-block"></span>
                        <span>Purchase Form</span>
                      </button>
                      <button
                        onClick={e => handleCheckClick(e, 'paymentOut')}
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-money-bill d-inline-block"></span>
                        <span>Payment Out List</span>
                      </button>
                    </div>
                  )}
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    disabled
                    onClick={e => handleCheckClick(e, 'reports')}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-book text-black d-inline-block"></span>
                    <span className="text-black"> Report's</span>
                  </button>
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    disabled
                    onClick={e => handleCheckClick(e, 'expenseManager')}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-book text-black d-inline-block"></span>
                    <span className="text-black"> Expense Manager</span>
                  </button>
                </div>

                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <NavLink
                    to="#"
                    className=" text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-fw pi-users text-black opacity-50  d-inline-block"></span>
                    <span className="text-black opacity-50">Users</span>
                  </NavLink>
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    disabled
                    onClick={e => handleCheckClick(e, 'settings')}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-cog text-black d-inline-block"></span>
                    <span className="text-black"> Settings</span>
                  </button>
                </div>
              </div>
            </nav>
          )}
          {userRole == 'stockManager' && (
            <nav className=" bg-white px-4 py-3 shadow-md flex justify-between items-center">
              <button
                className="md:hidden text-2xl"
                onClick={() => setSidebarOpen(true)}
              >
                <span className="text-2xl">☰</span>
              </button>

              <div className="hidden md:flex space-x-6 items-center">
                <NavLink
                  to="/dashboard"
                  className="text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                >
                  <span className="pi pi-fw pi-home  d-inline-block"></span>
                  <span className="text-black">Dashboard</span>
                </NavLink>

                {/* Products Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    disabled
                    style={{ borderRadius: '16px' }}
                    onClick={e => handleCheckClick(e, 'products')}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2"
                  >
                    <span className="pi pi-fw pi-list  d-inline-block"></span>
                    <span className="text-black">Products</span>
                  </button>
                </div>

                {/* Customer's Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    disabled
                    style={{ borderRadius: '16px' }}
                    onClick={e => handleCheckClick(e, 'display')}
                    className="text-decoration-none disabled:opacity-70 disabled:text-gray-200 text-black hover:bg-gray-300 p-2"
                  >
                    <span className="pi pi-fw pi-users d-inline-block"></span>
                    <span className="text-black">Customer's</span>
                  </button>
                </div>

                {/* ₹ Sales Dropdown */}
                {/* ₹ Sales Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[2] = el)}
                >
                  <button
                    onClick={() => toggleDropdown(2)}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                    style={{ borderRadius: '16px' }}
                  >
                    <span>₹ Sales ▼</span>
                  </button>
                  {dropdownOpen === 2 && (
                    <div className="absolute left-0 mt-2 w-52 bg-white border rounded shadow-lg z-50">
                      <button
                        disabled
                        onClick={e => handleCheckClick(e, 'invoices')}
                        className="disabled:opacity-70 disabled:text-gray-200 block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-file d-inline-block"></span>
                        <span>Invoice's</span>
                      </button>
                      <button
                        disabled
                        onClick={e =>
                          handleCheckClick(e, 'deliverychallan-table')
                        }
                        className="
                       disabled:opacity-70 disabled:text-gray-200 block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-truck d-inline-block"></span>
                        <span>Delivery Challan</span>
                      </button>
                      <button
                        disabled
                        onClick={e => handleCheckClick(e, 'quotation')}
                        className="disabled:opacity-70 disabled:text-gray-200 block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-file d-inline-block"></span>
                        <span>Quotation's</span>
                      </button>
                      <button
                        onClick={e => handleCheckClick(e, 'inventory')}
                        className="disabled:opacity-70 disabled:text-gray-200 block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-box d-inline-block"></span>
                        <span>Inventory</span>
                      </button>
                      <button
                        disabled
                        onClick={e => handleCheckClick(e, 'paymentIn')}
                        className="disabled:opacity-70 disabled:text-gray-200 block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-money-bill d-inline-block"></span>
                        <span>Payment In list</span>
                      </button>
                    </div>
                  )}
                </div>

                {/* Purchase Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[3] = el)}
                >
                  <button
                    onClick={() => toggleDropdown(3)}
                    className=" text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                    style={{ borderRadius: '16px' }}
                  >
                    <span>Purchase ▼</span>
                  </button>
                  {dropdownOpen === 3 && (
                    <div className="absolute left-0 mt-2 w-52 bg-white border rounded shadow-lg z-50">
                      <button
                        onClick={e => handleCheckClick(e, 'purchase-table')}
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-file d-inline-block"></span>
                        <span>Purchase List</span>
                      </button>
                      <button
                        onClick={e => handleCheckClick(e, 'purchaseForm')}
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-arrow-left d-inline-block"></span>
                        <span>Purchase Form</span>
                      </button>
                      <button
                        disabled
                        onClick={e => handleCheckClick(e, 'paymentOut')}
                        className="disabled:opacity-70 disabled:text-gray-200 block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-money-bill d-inline-block"></span>
                        <span>Payment Out List</span>
                      </button>
                    </div>
                  )}
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    disabled
                    onClick={e => handleCheckClick(e, 'reports')}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-book text-black d-inline-block"></span>
                    <span className="text-black"> Report's</span>
                  </button>
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    disabled
                    onClick={e => handleCheckClick(e, 'expenseManager')}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-book text-black d-inline-block"></span>
                    <span className="text-black"> Expense Manager</span>
                  </button>
                </div>

                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <NavLink
                    to="#"
                    className=" text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-fw pi-users text-black opacity-50  d-inline-block"></span>
                    <span className="text-black opacity-50">Users</span>
                  </NavLink>
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    disabled
                    onClick={e => handleCheckClick(e, 'settings')}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-cog text-black d-inline-block"></span>
                    <span className="text-black"> Settings</span>
                  </button>
                </div>
              </div>
            </nav>
          )}
          {userRole == 'salesPerson' && (
            <nav className=" bg-white px-4 py-3 shadow-md flex justify-between items-center">
              <button
                className="md:hidden text-2xl"
                onClick={() => setSidebarOpen(true)}
              >
                <span className="text-2xl">☰</span>
              </button>

              <div className="hidden md:flex space-x-6 items-center">
                <NavLink
                  to="/dashboard"
                  className="text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                >
                  <span className="pi pi-fw pi-home  d-inline-block"></span>
                  <span className="text-black">Dashboard</span>
                </NavLink>

                {/* Products Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    style={{ borderRadius: '16px' }}
                    onClick={e => handleCheckClick(e, 'products')}
                    className="text-decoration-none text-black hover:bg-gray-300 p-2"
                  >
                    <span className="pi pi-fw pi-list  d-inline-block"></span>
                    <span className="text-black">Products</span>
                  </button>
                </div>

                {/* Customer's Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    style={{ borderRadius: '16px' }}
                    onClick={e => handleCheckClick(e, 'display')}
                    className="text-decoration-none text-black hover:bg-gray-300 p-2"
                  >
                    <span className="pi pi-fw pi-users d-inline-block"></span>
                    <span className="text-black">Customer's</span>
                  </button>
                </div>

                {/* ₹ Sales Dropdown */}
                {/* ₹ Sales Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[2] = el)}
                >
                  <button
                    onClick={() => toggleDropdown(2)}
                    className="text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                    style={{ borderRadius: '16px' }}
                  >
                    <span>₹ Sales ▼</span>
                  </button>
                  {dropdownOpen === 2 && (
                    <div className="absolute left-0 mt-2 w-52 bg-white border rounded shadow-lg z-50">
                      <button
                        onClick={e => handleCheckClick(e, 'invoices')}
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-file d-inline-block"></span>
                        <span>Invoice's</span>
                      </button>
                      <button
                        onClick={e =>
                          handleCheckClick(e, 'deliverychallan-table')
                        }
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-truck d-inline-block"></span>
                        <span>Delivery Challan</span>
                      </button>
                      <button
                        onClick={e => handleCheckClick(e, 'quotation')}
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-file d-inline-block"></span>
                        <span>Quotation's</span>
                      </button>
                      <button
                        disabled
                        onClick={e => handleCheckClick(e, 'paymentIn')}
                        className="disabled:opacity-70 disabled:text-gray-200 block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-money-bill d-inline-block"></span>
                        <span>Payment In list</span>
                      </button>
                    </div>
                  )}
                </div>

                {/* Purchase Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[3] = el)}
                >
                  <button
                    disabled
                    onClick={() => toggleDropdown(3)}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                    style={{ borderRadius: '16px' }}
                  >
                    <span>Purchase ▼</span>
                  </button>
                  {dropdownOpen === 3 && (
                    <div className="absolute left-0 mt-2 w-52 bg-white border rounded shadow-lg z-50">
                      <button
                        onClick={e => handleCheckClick(e, 'purchase-table')}
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-file d-inline-block"></span>
                        <span>Purchase List</span>
                      </button>
                      <button
                        onClick={e => handleCheckClick(e, 'purchaseForm')}
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-arrow-left d-inline-block"></span>
                        <span>Purchase Form</span>
                      </button>
                      <button
                        onClick={e => handleCheckClick(e, 'paymentOut')}
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-money-bill d-inline-block"></span>
                        <span>Payment Out List</span>
                      </button>
                    </div>
                  )}
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    disabled
                    onClick={e => handleCheckClick(e, 'reports')}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-book text-black d-inline-block"></span>
                    <span className="text-black"> Report's</span>
                  </button>
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    disabled
                    onClick={e => handleCheckClick(e, 'expenseManager')}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-book text-black d-inline-block"></span>
                    <span className="text-black"> Expense Manager</span>
                  </button>
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <NavLink
                    to="#"
                    className=" text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-fw pi-users text-black opacity-50  d-inline-block"></span>
                    <span className="text-black opacity-50">Users</span>
                  </NavLink>
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    disabled
                    onClick={e => handleCheckClick(e, 'settings')}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-cog text-black d-inline-block"></span>
                    <span className="text-black"> Settings</span>
                  </button>
                </div>
              </div>
            </nav>
          )}
          {userRole == 'owner' && (
            <nav className=" bg-white px-4 py-3 shadow-md flex justify-between items-center">
              <button
                className="md:hidden text-2xl"
                onClick={() => setSidebarOpen(true)}
              >
                <span className="text-2xl">☰</span>
              </button>

              <div className="hidden md:flex space-x-6 items-center">
                <NavLink
                  to="/dashboard"
                  className="text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                >
                  <span className="pi pi-fw pi-home  d-inline-block"></span>
                  <span className="text-black">Dashboard</span>
                </NavLink>

                {/* Products Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    style={{ borderRadius: '16px' }}
                    onClick={e => handleCheckClick(e, 'products')}
                    className="text-decoration-none text-black hover:bg-gray-300 p-2"
                  >
                    <span className="pi pi-fw pi-list  d-inline-block"></span>
                    <span className="text-black">Products</span>
                  </button>
                </div>

                {/* Customer's Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    style={{ borderRadius: '16px' }}
                    onClick={e => handleCheckClick(e, 'display')}
                    className="text-decoration-none text-black hover:bg-gray-300 p-2"
                  >
                    <span className="pi pi-fw pi-users d-inline-block"></span>
                    <span className="text-black">Customer's</span>
                  </button>
                </div>

                {/* ₹ Sales Dropdown */}
                {/* ₹ Sales Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[2] = el)}
                >
                  <button
                    onClick={() => toggleDropdown(2)}
                    className="text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                    style={{ borderRadius: '16px' }}
                  >
                    <span>₹ Sales ▼</span>
                  </button>
                  {dropdownOpen === 2 && (
                    <div className="absolute left-0 mt-2 w-52 bg-white border rounded shadow-lg z-50">
                      <button
                        onClick={e => handleCheckClick(e, 'invoices')}
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-file d-inline-block"></span>
                        <span>Invoice's</span>
                      </button>
                      <button
                        onClick={e =>
                          handleCheckClick(e, 'deliverychallan-table')
                        }
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-truck d-inline-block"></span>
                        <span>Delivery Challan</span>
                      </button>
                      <button
                        onClick={e => handleCheckClick(e, 'quotation')}
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-file d-inline-block"></span>
                        <span>Quotation's</span>
                      </button>
                      <button
                        onClick={e => handleCheckClick(e, 'inventory')}
                        className="disabled:opacity-70 disabled:text-gray-200 block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-box d-inline-block"></span>
                        <span>Inventory</span>
                      </button>
                      <button
                        onClick={e => handleCheckClick(e, 'paymentIn')}
                        className="disabled:opacity-70 disabled:text-gray-200 block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-money-bill d-inline-block"></span>
                        <span>Payment In list</span>
                      </button>
                    </div>
                  )}
                </div>

                {/* Purchase Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[3] = el)}
                >
                  <button
                    onClick={() => toggleDropdown(3)}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                    style={{ borderRadius: '16px' }}
                  >
                    <span>Purchase ▼</span>
                  </button>
                  {dropdownOpen === 3 && (
                    <div className="absolute left-0 mt-2 w-52 bg-white border rounded shadow-lg z-50">
                      <button
                        onClick={e => handleCheckClick(e, 'purchase-table')}
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-file d-inline-block"></span>
                        <span>Purchase List</span>
                      </button>
                      <button
                        onClick={e => handleCheckClick(e, 'purchaseForm')}
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-arrow-left d-inline-block"></span>
                        <span>Purchase Form</span>
                      </button>
                      <button
                        onClick={e => handleCheckClick(e, 'paymentOut')}
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-money-bill d-inline-block"></span>
                        <span>Payment Out List</span>
                      </button>
                    </div>
                  )}
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    onClick={e => handleCheckClick(e, 'reports')}
                    className=" text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-book text-black d-inline-block"></span>
                    <span className="text-black"> Report's</span>
                  </button>
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    onClick={e => handleCheckClick(e, 'expenseManager')}
                    className=" text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-book text-black d-inline-block"></span>
                    <span className="text-black"> Expense Manager</span>
                  </button>
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    onClick={e => handleCheckClick(e, 'users')}
                    className=" text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-fw pi-users text-black d-inline-block"></span>
                    <span className="text-black">Users</span>
                  </button>
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    onClick={e => handleCheckClick(e, 'settings')}
                    className=" text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-cog text-black d-inline-block"></span>
                    <span className="text-black"> Settings</span>
                  </button>
                </div>
              </div>
            </nav>
          )}
          {userRole == 'partner' && (
            <nav className=" bg-white px-4 py-3 shadow-md flex justify-between items-center">
              <button
                className="md:hidden text-2xl"
                onClick={() => setSidebarOpen(true)}
              >
                <span className="text-2xl">☰</span>
              </button>

              <div className="hidden md:flex space-x-6 items-center">
                <NavLink
                  to="/dashboard"
                  className="text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                >
                  <span className="pi pi-fw pi-home  d-inline-block"></span>
                  <span className="text-black">Dashboard</span>
                </NavLink>

                {/* Products Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    style={{ borderRadius: '16px' }}
                    onClick={e => handleCheckClick(e, 'products')}
                    className=" text-decoration-none text-black hover:bg-gray-300 p-2"
                  >
                    <span className="pi pi-fw pi-list  d-inline-block"></span>
                    <span className="text-black">Products</span>
                  </button>
                </div>

                {/* Customer's Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    style={{ borderRadius: '16px' }}
                    onClick={e => handleCheckClick(e, 'display')}
                    className="text-decoration-none  text-black hover:bg-gray-300 p-2"
                  >
                    <span className="pi pi-fw pi-users d-inline-block"></span>
                    <span className="text-black">Customer's</span>
                  </button>
                </div>

                {/* ₹ Sales Dropdown */}
                {/* ₹ Sales Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[2] = el)}
                >
                  <button
                    onClick={() => toggleDropdown(2)}
                    className="text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                    style={{ borderRadius: '16px' }}
                  >
                    <span>₹ Sales ▼</span>
                  </button>
                  {dropdownOpen === 2 && (
                    <div className="absolute left-0 mt-2 w-52 bg-white border rounded shadow-lg z-50">
                      <button
                        onClick={e => handleCheckClick(e, 'invoices')}
                        className=" block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-file d-inline-block"></span>
                        <span>Invoice's</span>
                      </button>
                      <button
                        onClick={e =>
                          handleCheckClick(e, 'deliverychallan-table')
                        }
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-truck d-inline-block"></span>
                        <span>Delivery Challan</span>
                      </button>
                      <button
                        onClick={e => handleCheckClick(e, 'quotation')}
                        className=" block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-file d-inline-block"></span>
                        <span>Quotation's</span>
                      </button>
                      <button
                        onClick={e => handleCheckClick(e, 'inventory')}
                        className="disabled:opacity-70 disabled:text-gray-200 block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-box d-inline-block"></span>
                        <span>Inventory</span>
                      </button>
                      <button
                        onClick={e => handleCheckClick(e, 'paymentIn')}
                        className=" block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-money-bill d-inline-block"></span>
                        <span>Payment In list</span>
                      </button>
                    </div>
                  )}
                </div>

                {/* Purchase Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[3] = el)}
                >
                  <button
                    onClick={() => toggleDropdown(3)}
                    className=" text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                    style={{ borderRadius: '16px' }}
                  >
                    <span>Purchase ▼</span>
                  </button>
                  {dropdownOpen === 3 && (
                    <div className="absolute left-0 mt-2 w-52 bg-white border rounded shadow-lg z-50">
                      <button
                        onClick={e => handleCheckClick(e, 'purchase-table')}
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-file d-inline-block"></span>
                        <span>Purchase List</span>
                      </button>
                      <button
                        onClick={e => handleCheckClick(e, 'purchaseForm')}
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-arrow-left d-inline-block"></span>
                        <span>Purchase Form</span>
                      </button>
                      <button
                        onClick={e => handleCheckClick(e, 'paymentOut')}
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-money-bill d-inline-block"></span>
                        <span>Payment Out List</span>
                      </button>
                    </div>
                  )}
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    onClick={e => handleCheckClick(e, 'reports')}
                    className=" text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-cog text-black d-inline-block"></span>
                    <span className="text-black"> Report's</span>
                  </button>
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    onClick={e => handleCheckClick(e, 'expenseManager')}
                    className=" text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-book text-black d-inline-block"></span>
                    <span className="text-black"> Expense Manager</span>
                  </button>
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    onClick={e => handleCheckClick(e, 'users')}
                    className=" text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-fw pi-users text-black d-inline-block"></span>
                    <span className="text-black">Users</span>
                  </button>
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    onClick={e => handleCheckClick(e, 'settings')}
                    className=" text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-cog text-black d-inline-block"></span>
                    <span className="text-black"> Settings</span>
                  </button>
                </div>
              </div>
            </nav>
          )}
          {/* Offcanvas Sidebar */}
          <div
            className={`fixed overflow-scroll top-0 left-0 w-64 h-full bg-white shadow-lg z-50 transform transition-transform duration-300 ease-in-out ${
              sidebarOpen ? 'translate-x-0' : '-translate-x-full'
            }`}
            ref={sidebarRef}
          >
            <div className="p-2 border-b flex justify-between items-center">
              <h2 className="text-lg font-bold">
                <img className="w-20" src={imgLogo} alt="" />
              </h2>
              <button
                className="text-4xl"
                onClick={() => setSidebarOpen(false)}
              >
                <span className="text-4xl">×</span>
              </button>
            </div>
            {(userRole == 'owner' || userRole == 'partner') && (
              <nav className="flex flex-col p-4 space-y-4">
                <NavLink
                  onClick={e => handleBussinessCheck(e)}
                  className="text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                >
                  <span className="inline-block mr-1">
                    <PiStorefrontThin />
                  </span>
                  <span className="text-black">
                    {business_name.length
                      ? business_name[0].vendor_business_legal_name.toUpperCase()
                      : ''}
                  </span>
                </NavLink>
                <NavLink
                  to="/dashboard"
                  onClick={() => setSidebarOpen(false)}
                  className="text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                >
                  <span className="pi pi-fw pi-home  d-inline-block"></span>
                  <span className="text-black">Dashboard</span>
                </NavLink>

                {/* Products Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    onClick={e => handleCheckClick(e, 'products')}
                    className="text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-fw pi-list  d-inline-block"></span>
                    <span className="text-black">Products</span>
                  </button>
                </div>

                {/* Customer's Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    onClick={e => handleCheckClick(e, 'display')}
                    className="text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-fw pi-users d-inline-block"></span>
                    <span className="text-black">Customer's</span>
                  </button>
                </div>

                {/* ₹ Sales Dropdown */}
                {/* ₹ Sales Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[2] = el)}
                >
                  <button
                    onClick={() => toggleDropdown(2)}
                    className="text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                    style={{ borderRadius: '16px' }}
                  >
                    <span>₹ Sales ▼</span>
                  </button>
                  {dropdownOpen === 2 && (
                    <div className="absolute left-0 mt-2 w-52 bg-white border rounded shadow-lg z-50">
                      <button
                        onClick={e => handleCheckClick(e, 'invoices')}
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-file d-inline-block"></span>
                        <span>Invoice's</span>
                      </button>
                      <button
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                        onClick={e =>
                          handleCheckClick(e, 'deliverychallan-table')
                        }
                      >
                        <span className="pi pi-fw pi-truck d-inline-block"></span>
                        <span>Delivery Challan</span>
                      </button>
                      <button
                        onClick={e => handleCheckClick(e, 'quotation')}
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-file d-inline-block"></span>
                        <span>Quotation's</span>
                      </button>
                      <button
                        onClick={e => handleCheckClick(e, 'inventory')}
                        className="disabled:opacity-70 disabled:text-gray-200 block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-box d-inline-block"></span>
                        <span>Inventory</span>
                      </button>
                      <button
                        onClick={e => handleCheckClick(e, 'paymentIn')}
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-money-bill d-inline-block"></span>
                        <span>Payment In list</span>
                      </button>
                    </div>
                  )}
                </div>

                {/* Purchase Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[3] = el)}
                >
                  <button
                    onClick={() => toggleDropdown(3)}
                    className="text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                    style={{ borderRadius: '16px' }}
                  >
                    <span>Purchase ▼</span>
                  </button>
                  {dropdownOpen === 3 && (
                    <div className="absolute left-0 mt-2 w-52 bg-white border rounded shadow-lg z-50">
                      <button
                        onClick={e => handleCheckClick(e, 'purchase-table')}
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-file d-inline-block"></span>
                        <span>Purchase List</span>
                      </button>
                      <button
                        onClick={e => handleCheckClick(e, 'purchaseForm')}
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-arrow-left d-inline-block"></span>
                        <span>Purchase Form</span>
                      </button>
                      <button
                        to="/paymentOut"
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                        onClick={e => handleCheckClick(e, 'paymentOut')}
                      >
                        <span className="pi pi-fw pi-money-bill d-inline-block"></span>
                        <span>Payment Out List</span>
                      </button>
                    </div>
                  )}
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    onClick={e => handleCheckClick(e, 'reports')}
                    className=" text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-book text-black d-inline-block"></span>
                    <span className="text-black"> Report's</span>
                  </button>
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    onClick={e => handleCheckClick(e, 'expenseManager')}
                    className=" text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-book text-black d-inline-block"></span>
                    <span className="text-black"> Expense Manager</span>
                  </button>
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    onClick={e => handleCheckClick(e, 'users')}
                    className="text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-fw pi-users  d-inline-block"></span>
                    <span className="text-black">Users</span>
                  </button>
                </div>

                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[4] = el)}
                >
                  <button
                    onClick={() => toggleDropdown(4)}
                    className="text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                    style={{ borderRadius: '16px' }}
                  >
                    <span>Setting's ▼</span>
                  </button>
                  {dropdownOpen === 4 && (
                    <div>
                      <div className="absolute left-0 mt-2 w-52 bg-white border rounded shadow-lg z-50">
                        <h6 className="p-2">Invoice setting</h6>
                        <hr className="mb-1" />
                        <NavLink
                          to="/settings/prefixInvoice"
                          className="block px-4 py-2 hover:bg-gray-100 text-black"
                          onClick={() => handleSideClose(null)} // Close dropdown on click
                        >
                          <span>- Prefix Invoice</span>
                        </NavLink>
                        <NavLink
                          to="/settings/themeInvoice"
                          className="block px-4 py-2 hover:bg-gray-100 text-black"
                          onClick={() => handleSideClose(null)} // Close dropdown on click
                        >
                          <span>- Theme Invoice</span>
                        </NavLink>
                        <NavLink
                          to="/settings/bankAccountInvoice"
                          className="block px-4 py-2 hover:bg-gray-100 text-black"
                          onClick={() => handleSideClose(null)} // Close dropdown on click
                        >
                          <span>- Bank Account Invoice</span>
                        </NavLink>
                        <NavLink
                          to="/settings/authorizedSignatureInvoice"
                          className="block px-4 py-2 hover:bg-gray-100 text-black"
                          onClick={() => handleSideClose(null)} // Close dropdown on click
                        >
                          <span>- Authorized Signature Invoice</span>
                        </NavLink>
                        <h6 className="p-2">Challan setting</h6>
                        <hr className="mb-1" />
                        <NavLink
                          to="/settings/prefixChallan"
                          className="block px-4 py-2 hover:bg-gray-100 text-black"
                          onClick={() => handleSideClose(null)} // Close dropdown on click
                        >
                          <span>- Prefix Challan</span>
                        </NavLink>
                        <NavLink
                          to="/settings/themeChallan"
                          className="block px-4 py-2 hover:bg-gray-100 text-black"
                          onClick={() => handleSideClose(null)} // Close dropdown on click
                        >
                          <span>- Theme Challan</span>
                        </NavLink>
                        <NavLink
                          to="/settings/bankAccountChallan"
                          className="block px-4 py-2 hover:bg-gray-100 text-black"
                          onClick={() => handleSideClose(null)} // Close dropdown on click
                        >
                          <span>- Bank Account Challan</span>
                        </NavLink>
                        <NavLink
                          to="/settings/authorizedSignatureChallan"
                          className="block px-4 py-2 hover:bg-gray-100 text-black"
                          onClick={() => handleSideClose(null)} // Close dropdown on click
                        >
                          <span>- Authorized Signature Challan</span>
                        </NavLink>
                      </div>
                    </div>
                  )}
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    onClick={() => {
                      if (timeoutRef.current) {
                        clearTimeout(timeoutRef.current);
                        timeoutRef.current = null;
                      }
                      navigate('/login'); // Manually navigate after clearing timeout
                    }}
                    className="text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="inline-block">
                      <IoMdLogOut className="inline-block mr-1" />
                      Logout
                    </span>
                  </button>
                </div>
              </nav>
            )}
            {userRole == 'salesPerson' && (
              <nav className="flex flex-col p-4 space-y-4">
                <NavLink
                  onClick={e => handleBussinessCheck(e)}
                  className="text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                >
                  <span className="inline-block mr-1">
                    <PiStorefrontThin />
                  </span>
                  <span className="text-black">
                    {business_name.length
                      ? business_name[0].vendor_business_legal_name.toUpperCase()
                      : ''}
                  </span>
                </NavLink>
                <NavLink
                  to="/dashboard"
                  onClick={() => setSidebarOpen(false)}
                  className="text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                >
                  <span className="pi pi-fw pi-home  d-inline-block"></span>
                  <span className="text-black">Dashboard</span>
                </NavLink>

                {/* Products Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    onClick={e => handleCheckClick(e, 'products')}
                    className="text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-fw pi-list  d-inline-block"></span>
                    <span className="text-black">Products</span>
                  </button>
                </div>

                {/* Customer's Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    onClick={e => handleCheckClick(e, 'display')}
                    className="text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-fw pi-users d-inline-block"></span>
                    <span className="text-black">Customer's</span>
                  </button>
                </div>

                {/* ₹ Sales Dropdown */}
                {/* ₹ Sales Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[2] = el)}
                >
                  <button
                    onClick={() => toggleDropdown(2)}
                    className="text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                    style={{ borderRadius: '16px' }}
                  >
                    <span>₹ Sales ▼</span>
                  </button>
                  {dropdownOpen === 2 && (
                    <div className="absolute left-0 mt-2 w-52 bg-white border rounded shadow-lg z-50">
                      <button
                        onClick={e => handleCheckClick(e, 'invoices')}
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-file d-inline-block"></span>
                        <span>Invoice's</span>
                      </button>
                      <button
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                        onClick={e =>
                          handleCheckClick(e, 'deliverychallan-table')
                        }
                      >
                        <span className="pi pi-fw pi-truck d-inline-block"></span>
                        <span>Delivery Challan</span>
                      </button>
                      <button
                        onClick={e => handleCheckClick(e, 'quotation')}
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-file d-inline-block"></span>
                        <span>Quotation's</span>
                      </button>
                      <button
                        onClick={e => handleCheckClick(e, 'paymentIn')}
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-money-bill d-inline-block"></span>
                        <span>Payment In list</span>
                      </button>
                    </div>
                  )}
                </div>

                {/* Purchase Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[3] = el)}
                >
                  <button
                    disabled
                    onClick={() => toggleDropdown(3)}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                    style={{ borderRadius: '16px' }}
                  >
                    <span>Purchase ▼</span>
                  </button>
                  {dropdownOpen === 3 && (
                    <div className="absolute left-0 mt-2 w-52 bg-white border rounded shadow-lg z-50">
                      <button
                        onClick={e => handleCheckClick(e, 'purchase-table')}
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-file d-inline-block"></span>
                        <span>Purchase List</span>
                      </button>
                      <button
                        onClick={e => handleCheckClick(e, 'purchaseForm')}
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-arrow-left d-inline-block"></span>
                        <span>Purchase Form</span>
                      </button>
                      <button
                        to="/paymentOut"
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                        onClick={e => handleCheckClick(e, 'paymentOut')}
                      >
                        <span className="pi pi-fw pi-money-bill d-inline-block"></span>
                        <span>Payment Out List</span>
                      </button>
                    </div>
                  )}
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    disabled
                    onClick={e => handleCheckClick(e, 'reports')}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-book text-black d-inline-block"></span>
                    <span className="text-black"> Report's</span>
                  </button>
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    disabled
                    onClick={e => handleCheckClick(e, 'expenseManager')}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-book text-black d-inline-block"></span>
                    <span className="text-black"> Expense Manager</span>
                  </button>
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    disabled
                    onClick={e => handleCheckClick(e, 'users')}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-fw pi-users  d-inline-block"></span>
                    <span className="text-black">Users</span>
                  </button>
                </div>

                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[4] = el)}
                >
                  <button
                    disabled
                    onClick={() => toggleDropdown(4)}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                    style={{ borderRadius: '16px' }}
                  >
                    <span>Setting's ▼</span>
                  </button>
                  {dropdownOpen === 4 && (
                    <div>
                      <div className="absolute left-0 mt-2 w-52 bg-white border rounded shadow-lg z-50">
                        <h6 className="p-2">Invoice setting</h6>
                        <hr className="mb-1" />
                        <NavLink
                          to="/settings/prefixInvoice"
                          className="block px-4 py-2 hover:bg-gray-100 text-black"
                          onClick={() => handleSideClose(null)} // Close dropdown on click
                        >
                          <span>- Prefix Invoice</span>
                        </NavLink>
                        <NavLink
                          to="/settings/themeInvoice"
                          className="block px-4 py-2 hover:bg-gray-100 text-black"
                          onClick={() => handleSideClose(null)} // Close dropdown on click
                        >
                          <span>- Theme Invoice</span>
                        </NavLink>
                        <NavLink
                          to="/settings/bankAccountInvoice"
                          className="block px-4 py-2 hover:bg-gray-100 text-black"
                          onClick={() => handleSideClose(null)} // Close dropdown on click
                        >
                          <span>- Bank Account Invoice</span>
                        </NavLink>
                        <NavLink
                          to="/settings/authorizedSignatureInvoice"
                          className="block px-4 py-2 hover:bg-gray-100 text-black"
                          onClick={() => handleSideClose(null)} // Close dropdown on click
                        >
                          <span>- Authorized Signature Invoice</span>
                        </NavLink>
                        <h6 className="p-2">Challan setting</h6>
                        <hr className="mb-1" />
                        <NavLink
                          to="/settings/prefixChallan"
                          className="block px-4 py-2 hover:bg-gray-100 text-black"
                          onClick={() => handleSideClose(null)} // Close dropdown on click
                        >
                          <span>- Prefix Challan</span>
                        </NavLink>
                        <NavLink
                          to="/settings/themeChallan"
                          className="block px-4 py-2 hover:bg-gray-100 text-black"
                          onClick={() => handleSideClose(null)} // Close dropdown on click
                        >
                          <span>- Theme Challan</span>
                        </NavLink>
                        <NavLink
                          to="/settings/bankAccountChallan"
                          className="block px-4 py-2 hover:bg-gray-100 text-black"
                          onClick={() => handleSideClose(null)} // Close dropdown on click
                        >
                          <span>- Bank Account Challan</span>
                        </NavLink>
                        <NavLink
                          to="/settings/authorizedSignatureChallan"
                          className="block px-4 py-2 hover:bg-gray-100 text-black"
                          onClick={() => handleSideClose(null)} // Close dropdown on click
                        >
                          <span>- Authorized Signature Challan</span>
                        </NavLink>
                      </div>
                    </div>
                  )}
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    onClick={() => {
                      if (timeoutRef.current) {
                        clearTimeout(timeoutRef.current);
                        timeoutRef.current = null;
                      }
                      navigate('/login'); // Manually navigate after clearing timeout
                    }}
                    className="text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="inline-block">
                      <IoMdLogOut className="inline-block mr-1" />
                      Logout
                    </span>
                  </button>
                </div>
              </nav>
            )}
            {userRole == 'deliveryBoy' && (
              <nav className="flex flex-col p-4 space-y-4">
                <NavLink
                  onClick={e => handleBussinessCheck(e)}
                  className="text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                >
                  <span className="inline-block mr-1">
                    <PiStorefrontThin />
                  </span>
                  <span className="text-black">
                    {business_name.length
                      ? business_name[0].vendor_business_legal_name.toUpperCase()
                      : ''}
                  </span>
                </NavLink>
                <NavLink
                  to="/dashboard"
                  onClick={() => setSidebarOpen(false)}
                  className="text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                >
                  <span className="pi pi-fw pi-home  d-inline-block"></span>
                  <span className="text-black">Dashboard</span>
                </NavLink>

                {/* Products Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    disabled
                    onClick={e => handleCheckClick(e, 'products')}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-fw pi-list  d-inline-block"></span>
                    <span className="text-black">Products</span>
                  </button>
                </div>

                {/* Customer's Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    disabled
                    onClick={e => handleCheckClick(e, 'display')}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-fw pi-users d-inline-block"></span>
                    <span className="text-black">Customer's</span>
                  </button>
                </div>

                {/* ₹ Sales Dropdown */}
                {/* ₹ Sales Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[2] = el)}
                >
                  <button
                    onClick={() => toggleDropdown(2)}
                    className="text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                    style={{ borderRadius: '16px' }}
                  >
                    <span>₹ Sales ▼</span>
                  </button>
                  {dropdownOpen === 2 && (
                    <div className="absolute left-0 mt-2 w-52 bg-white border rounded shadow-lg z-50">
                      <button
                        disabled
                        onClick={e => handleCheckClick(e, 'invoices')}
                        className="disabled:opacity-70 disabled:text-gray-200 block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-file d-inline-block"></span>
                        <span>Invoice's</span>
                      </button>
                      <button
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                        onClick={e =>
                          handleCheckClick(e, 'deliverychallan-table')
                        }
                      >
                        <span className="pi pi-fw pi-truck d-inline-block"></span>
                        <span>Delivery Challan</span>
                      </button>
                      <button
                        disabled
                        onClick={e => handleCheckClick(e, 'quotation')}
                        className="disabled:opacity-70 disabled:text-gray-200 block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-file d-inline-block"></span>
                        <span>Quotation's</span>
                      </button>
                      <button
                        disabled
                        onClick={e => handleCheckClick(e, 'paymentIn')}
                        className="disabled:opacity-70 disabled:text-gray-200 block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-money-bill d-inline-block"></span>
                        <span>Payment In list</span>
                      </button>
                    </div>
                  )}
                </div>

                {/* Purchase Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[3] = el)}
                >
                  <button
                    disabled
                    onClick={() => toggleDropdown(3)}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                    style={{ borderRadius: '16px' }}
                  >
                    <span>Purchase ▼</span>
                  </button>
                  {dropdownOpen === 3 && (
                    <div className="absolute left-0 mt-2 w-52 bg-white border rounded shadow-lg z-50">
                      <button
                        onClick={e => handleCheckClick(e, 'purchase-table')}
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-file d-inline-block"></span>
                        <span>Purchase List</span>
                      </button>
                      <button
                        onClick={e => handleCheckClick(e, 'purchaseForm')}
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-arrow-left d-inline-block"></span>
                        <span>Purchase Form</span>
                      </button>
                      <button
                        to="/paymentOut"
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                        onClick={e => handleCheckClick(e, 'paymentOut')}
                      >
                        <span className="pi pi-fw pi-money-bill d-inline-block"></span>
                        <span>Payment Out List</span>
                      </button>
                    </div>
                  )}
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    disabled
                    onClick={e => handleCheckClick(e, 'reports')}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-book text-black d-inline-block"></span>
                    <span className="text-black"> Report's</span>
                  </button>
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    disabled
                    onClick={e => handleCheckClick(e, 'expenseManager')}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-book text-black d-inline-block"></span>
                    <span className="text-black"> Expense Manager</span>
                  </button>
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    disabled
                    onClick={e => handleCheckClick(e, 'users')}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-fw pi-users  d-inline-block"></span>
                    <span className="text-black">Users</span>
                  </button>
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[4] = el)}
                >
                  <button
                    disabled
                    onClick={() => toggleDropdown(4)}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                    style={{ borderRadius: '16px' }}
                  >
                    <span>Setting's ▼</span>
                  </button>
                  {dropdownOpen === 4 && (
                    <div>
                      <div className="absolute left-0 mt-2 w-52 bg-white border rounded shadow-lg z-50">
                        <h6 className="p-2">Invoice setting</h6>
                        <hr className="mb-1" />
                        <NavLink
                          to="/settings/prefixInvoice"
                          className="block px-4 py-2 hover:bg-gray-100 text-black"
                          onClick={() => handleSideClose(null)} // Close dropdown on click
                        >
                          <span>- Prefix Invoice</span>
                        </NavLink>
                        <NavLink
                          to="/settings/themeInvoice"
                          className="block px-4 py-2 hover:bg-gray-100 text-black"
                          onClick={() => handleSideClose(null)} // Close dropdown on click
                        >
                          <span>- Theme Invoice</span>
                        </NavLink>
                        <NavLink
                          to="/settings/bankAccountInvoice"
                          className="block px-4 py-2 hover:bg-gray-100 text-black"
                          onClick={() => handleSideClose(null)} // Close dropdown on click
                        >
                          <span>- Bank Account Invoice</span>
                        </NavLink>
                        <NavLink
                          to="/settings/authorizedSignatureInvoice"
                          className="block px-4 py-2 hover:bg-gray-100 text-black"
                          onClick={() => handleSideClose(null)} // Close dropdown on click
                        >
                          <span>- Authorized Signature Invoice</span>
                        </NavLink>
                        <h6 className="p-2">Challan setting</h6>
                        <hr className="mb-1" />
                        <NavLink
                          to="/settings/prefixChallan"
                          className="block px-4 py-2 hover:bg-gray-100 text-black"
                          onClick={() => handleSideClose(null)} // Close dropdown on click
                        >
                          <span>- Prefix Challan</span>
                        </NavLink>
                        <NavLink
                          to="/settings/themeChallan"
                          className="block px-4 py-2 hover:bg-gray-100 text-black"
                          onClick={() => handleSideClose(null)} // Close dropdown on click
                        >
                          <span>- Theme Challan</span>
                        </NavLink>
                        <NavLink
                          to="/settings/bankAccountChallan"
                          className="block px-4 py-2 hover:bg-gray-100 text-black"
                          onClick={() => handleSideClose(null)} // Close dropdown on click
                        >
                          <span>- Bank Account Challan</span>
                        </NavLink>
                        <NavLink
                          to="/settings/authorizedSignatureChallan"
                          className="block px-4 py-2 hover:bg-gray-100 text-black"
                          onClick={() => handleSideClose(null)} // Close dropdown on click
                        >
                          <span>- Authorized Signature Challan</span>
                        </NavLink>
                      </div>
                    </div>
                  )}
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    onClick={() => {
                      if (timeoutRef.current) {
                        clearTimeout(timeoutRef.current);
                        timeoutRef.current = null;
                      }
                      navigate('/login'); // Manually navigate after clearing timeout
                    }}
                    className="text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="inline-block">
                      <IoMdLogOut className="inline-block mr-1" />
                      Logout
                    </span>
                  </button>
                </div>
              </nav>
            )}
            {userRole == 'stockManager' && (
              <nav className="flex flex-col p-4 space-y-4">
                <NavLink
                  onClick={e => handleBussinessCheck(e)}
                  className="text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                >
                  <span className="inline-block mr-1">
                    <PiStorefrontThin />
                  </span>
                  <span className="text-black">
                    {business_name.length
                      ? business_name[0].vendor_business_legal_name.toUpperCase()
                      : ''}
                  </span>
                </NavLink>
                <NavLink
                  to="/dashboard"
                  onClick={() => setSidebarOpen(false)}
                  className="text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                >
                  <span className="pi pi-fw pi-home  d-inline-block"></span>
                  <span className="text-black">Dashboard</span>
                </NavLink>

                {/* Products Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    disabled
                    onClick={e => handleCheckClick(e, 'products')}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-fw pi-list  d-inline-block"></span>
                    <span className="text-black">Products</span>
                  </button>
                </div>

                {/* Customer's Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    disabled
                    onClick={e => handleCheckClick(e, 'display')}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-fw pi-users d-inline-block"></span>
                    <span className="text-black">Customer's</span>
                  </button>
                </div>

                {/* ₹ Sales Dropdown */}
                {/* ₹ Sales Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[2] = el)}
                >
                  <button
                    onClick={() => toggleDropdown(2)}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                    style={{ borderRadius: '16px' }}
                  >
                    <span>₹ Sales ▼</span>
                  </button>
                  {dropdownOpen === 2 && (
                    <div className="absolute left-0 mt-2 w-52 bg-white border rounded shadow-lg z-50">
                      <button
                        disabled
                        onClick={e => handleCheckClick(e, 'invoices')}
                        className="disabled:opacity-70 disabled:text-gray-200 block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-file d-inline-block"></span>
                        <span>Invoice's</span>
                      </button>
                      <button
                        disabled
                        className="disabled:opacity-70 disabled:text-gray-200 block px-4 py-2 hover:bg-gray-100 text-black"
                        onClick={e =>
                          handleCheckClick(e, 'deliverychallan-table')
                        }
                      >
                        <span className="pi pi-fw pi-truck d-inline-block"></span>
                        <span>Delivery Challan</span>
                      </button>
                      <button
                        disabled
                        onClick={e => handleCheckClick(e, 'quotation')}
                        className="disabled:opacity-70 disabled:text-gray-200 block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-file d-inline-block"></span>
                        <span>Quotation's</span>
                      </button>
                      <button
                        onClick={e => handleCheckClick(e, 'inventory')}
                        className="disabled:opacity-70 disabled:text-gray-200 block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-box d-inline-block"></span>
                        <span>Inventory</span>
                      </button>
                      <button
                        disabled
                        onClick={e => handleCheckClick(e, 'paymentIn')}
                        className="disabled:opacity-70 disabled:text-gray-200 block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-money-bill d-inline-block"></span>
                        <span>Payment In list</span>
                      </button>
                    </div>
                  )}
                </div>

                {/* Purchase Dropdown */}
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[3] = el)}
                >
                  <button
                    onClick={() => toggleDropdown(3)}
                    className=" text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                    style={{ borderRadius: '16px' }}
                  >
                    <span>Purchase ▼</span>
                  </button>
                  {dropdownOpen === 3 && (
                    <div className="absolute left-0 mt-2 w-52 bg-white border rounded shadow-lg z-50">
                      <button
                        onClick={e => handleCheckClick(e, 'purchase-table')}
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-file d-inline-block"></span>
                        <span>Purchase List</span>
                      </button>
                      <button
                        onClick={e => handleCheckClick(e, 'purchaseForm')}
                        className="block px-4 py-2 hover:bg-gray-100 text-black"
                      >
                        <span className="pi pi-fw pi-arrow-left d-inline-block"></span>
                        <span>Purchase Form</span>
                      </button>
                      <button
                        disabled
                        to="/paymentOut"
                        className="disabled:opacity-70 disabled:text-gray-200 block px-4 py-2 hover:bg-gray-100 text-black"
                        onClick={e => handleCheckClick(e, 'paymentOut')}
                      >
                        <span className="pi pi-fw pi-money-bill d-inline-block"></span>
                        <span>Payment Out List</span>
                      </button>
                    </div>
                  )}
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    disabled
                    onClick={e => handleCheckClick(e, 'reports')}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-book text-black d-inline-block"></span>
                    <span className="text-black"> Report's</span>
                  </button>
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    disabled
                    onClick={e => handleCheckClick(e, 'expenseManager')}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-book text-black d-inline-block"></span>
                    <span className="text-black"> Expense Manager</span>
                  </button>
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    disabled
                    onClick={e => handleCheckClick(e, 'users')}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="pi pi-fw pi-users  d-inline-block"></span>
                    <span className="text-black">Users</span>
                  </button>
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[4] = el)}
                >
                  <button
                    disabled
                    onClick={() => toggleDropdown(4)}
                    className="disabled:opacity-70 disabled:text-gray-200 text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                    style={{ borderRadius: '16px' }}
                  >
                    <span>Setting's ▼</span>
                  </button>
                  {dropdownOpen === 4 && (
                    <div>
                      <div className="absolute left-0 mt-2 w-52 bg-white border rounded shadow-lg z-50">
                        <h6 className="p-2">Invoice setting</h6>
                        <hr className="mb-1" />
                        <NavLink
                          to="/settings/prefixInvoice"
                          className="block px-4 py-2 hover:bg-gray-100 text-black"
                          onClick={() => handleSideClose(null)} // Close dropdown on click
                        >
                          <span>- Prefix Invoice</span>
                        </NavLink>
                        <NavLink
                          to="/settings/themeInvoice"
                          className="block px-4 py-2 hover:bg-gray-100 text-black"
                          onClick={() => handleSideClose(null)} // Close dropdown on click
                        >
                          <span>- Theme Invoice</span>
                        </NavLink>
                        <NavLink
                          to="/settings/bankAccountInvoice"
                          className="block px-4 py-2 hover:bg-gray-100 text-black"
                          onClick={() => handleSideClose(null)} // Close dropdown on click
                        >
                          <span>- Bank Account Invoice</span>
                        </NavLink>
                        <NavLink
                          to="/settings/authorizedSignatureInvoice"
                          className="block px-4 py-2 hover:bg-gray-100 text-black"
                          onClick={() => handleSideClose(null)} // Close dropdown on click
                        >
                          <span>- Authorized Signature Invoice</span>
                        </NavLink>
                        <h6 className="p-2">Challan setting</h6>
                        <hr className="mb-1" />
                        <NavLink
                          to="/settings/prefixChallan"
                          className="block px-4 py-2 hover:bg-gray-100 text-black"
                          onClick={() => handleSideClose(null)} // Close dropdown on click
                        >
                          <span>- Prefix Challan</span>
                        </NavLink>
                        <NavLink
                          to="/settings/themeChallan"
                          className="block px-4 py-2 hover:bg-gray-100 text-black"
                          onClick={() => handleSideClose(null)} // Close dropdown on click
                        >
                          <span>- Theme Challan</span>
                        </NavLink>
                        <NavLink
                          to="/settings/bankAccountChallan"
                          className="block px-4 py-2 hover:bg-gray-100 text-black"
                          onClick={() => handleSideClose(null)} // Close dropdown on click
                        >
                          <span>- Bank Account Challan</span>
                        </NavLink>
                        <NavLink
                          to="/settings/authorizedSignatureChallan"
                          className="block px-4 py-2 hover:bg-gray-100 text-black"
                          onClick={() => handleSideClose(null)} // Close dropdown on click
                        >
                          <span>- Authorized Signature Challan</span>
                        </NavLink>
                      </div>
                    </div>
                  )}
                </div>
                <div
                  className="relative"
                  ref={el => (dropdownRefs.current[0] = el)}
                >
                  <button
                    onClick={() => {
                      if (timeoutRef.current) {
                        clearTimeout(timeoutRef.current);
                        timeoutRef.current = null;
                      }
                      navigate('/login'); // Manually navigate after clearing timeout
                    }}
                    className="text-decoration-none text-black hover:bg-gray-300 p-2 rounded-2xl"
                  >
                    <span className="inline-block">
                      <IoMdLogOut className="inline-block mr-1" />
                      Logout
                    </span>
                  </button>
                </div>
              </nav>
            )}
          </div>

          {/* Overlay Background */}
          {sidebarOpen && (
            <div
              className="fixed inset-0 bg-black opacity-30 z-40"
              onClick={() => setSidebarOpen(false)}
            ></div>
          )}
        </div>
      </div>